{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Public\\\\Native\\\\umkm-apps\\\\src\\\\screens\\\\Recipe\\\\RecipeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\nimport { Container, Header, Content, Card, CardItem, Right, Left, Footer, FooterTab, Button, Icon, Body } from 'native-base';\nimport { Rating, AirbnbRating } from 'react-native-ratings';\nimport MapView, { Marker, Polyline } from 'react-native-maps';\nimport MapViewDirections from 'react-native-maps-directions';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    viewportWidth = _Dimensions$get.width;\n\nimport { AntDesign, Entypo } from '@expo/vector-icons';\nimport * as Permissions from 'expo-permissions';\nimport polyline from '@mapbox/polyline';\nimport * as Location from 'expo-location';\n\nvar locations = require(\"./location.json\");\n\nvar _Dimensions$get2 = Dimensions.get('screen'),\n    width = _Dimensions$get2.width,\n    height = _Dimensions$get2.height;\n\nvar RecipeScreen = function (_React$Component) {\n  _inherits(RecipeScreen, _React$Component);\n\n  var _super = _createSuper(RecipeScreen);\n\n  function RecipeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.mergeCoords = function () {\n      var _this$state = _this.state,\n          latitude = _this$state.latitude,\n          longitude = _this$state.longitude,\n          desLatitude = _this$state.desLatitude,\n          desLongitude = _this$state.desLongitude;\n      var hasStartAndEnd = latitude !== null && desLatitude !== null;\n\n      if (hasStartAndEnd) {\n        var concatStart = latitude + \",\" + longitude;\n        var concatEnd = desLatitude + \",\" + desLongitude;\n\n        _this.getDirections(concatStart, concatEnd);\n      }\n    };\n\n    _this.onMarkerPress = function (location) {\n      return function () {\n        var _location$coords = location.coords,\n            latitude = _location$coords.latitude,\n            longitude = _location$coords.longitude;\n\n        _this.setState({\n          destination: location,\n          desLatitude: latitude,\n          desLongitude: longitude\n        }, _this.mergeCoords);\n      };\n    };\n\n    _this.renderImage = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    _this.onPressIngredient = function (item) {\n      var name = getIngredientName(item);\n      var ingredient = item;\n\n      _this.props.navigation.navigate('Ingredient', {\n        ingredient: ingredient,\n        name: name\n      });\n    };\n\n    _this.state = {\n      activeSlide: 0,\n      active: true,\n      latitude: null,\n      longitude: null,\n      locations: locations\n    };\n    return _this;\n  }\n\n  _createClass(RecipeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _await$Permissions$ge, status, response, _this$state$locations, sampleLocation;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.LOCATION));\n\n            case 2:\n              _await$Permissions$ge = _context.sent;\n              status = _await$Permissions$ge.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n            case 7:\n              response = _context.sent;\n\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}).then(function (_ref2) {\n                var _ref2$coords = _ref2.coords,\n                    latitude = _ref2$coords.latitude,\n                    longitude = _ref2$coords.longitude;\n                return _this2.setState({\n                  latitude: latitude,\n                  longitude: longitude\n                }, _this2.mergeCoords);\n              }));\n\n            case 10:\n              _this$state$locations = _slicedToArray(this.state.locations, 1), sampleLocation = _this$state$locations[0];\n              this.setState({\n                desLatitude: sampleLocation.coords.latitude,\n                desLongitude: sampleLocation.coords.longitude\n              }, this.mergeCoords);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getDirections\",\n    value: function getDirections(startLoc, test) {\n      var lt, long, desLoc, GAPIS, resp, respJson, response, distanceTime, distance, time, points, coords;\n      return _regeneratorRuntime.async(function getDirections$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              lt = -6.4477257;\n              long = 107.0049049;\n              desLoc = lt + \",\" + long;\n              GAPIS = 'AIzaSyDslRfa7R_OkMMM8tpCjxAPHM4P5mmBlqA';\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(fetch(\"https://maps.googleapis.com/maps/api/directions/json?origin=\" + startLoc + \"&destination=\" + desLoc + \"&key=\" + GAPIS));\n\n            case 7:\n              resp = _context2.sent;\n              console.log(respJson.routes[0]);\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 11:\n              respJson = _context2.sent;\n              response = respJson.routes[0];\n              distanceTime = response.legs[0];\n              distance = distanceTime.distance.text;\n              time = distanceTime.duration.text;\n              points = polyline.decode(respJson.routes[0].overview_polyline.points);\n              coords = points.map(function (point) {\n                return {\n                  latitude: point[0],\n                  longitude: point[1]\n                };\n              });\n              this.setState({\n                coords: coords,\n                distance: distance,\n                time: time\n              });\n              _context2.next = 24;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log('Error: ', _context2.t0);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 21]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          activeSlide = _this$state2.activeSlide,\n          time = _this$state2.time,\n          coords = _this$state2.coords,\n          distance = _this$state2.distance,\n          latitude = _this$state2.latitude,\n          longitude = _this$state2.longitude,\n          destination = _this$state2.destination;\n      var navigation = this.props.navigation;\n      var item = navigation.getParam('item');\n      var category = getCategoryById(item.categoryId);\n      var title = getCategoryName(category.id);\n\n      var _Dimensions$get3 = Dimensions.get('window'),\n          width = _Dimensions$get3.width,\n          height = _Dimensions$get3.height;\n\n      var ASPECT_RATIO = width / height;\n      var LATITUDE = -6.2477257;\n      var LONGITUDE = 107.0049049;\n      var LATITUDE_DELTA = 0.0922;\n      var LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n      var GOOGLE_MAPS_APIKEY = 'AIzaSyDslRfa7R_OkMMM8tpCjxAPHM4P5mmBlqA';\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, React.createElement(CardItem, {\n        cardBody: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.carousel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, React.createElement(Carousel, {\n        ref: function ref(c) {\n          _this3.slider1Ref = c;\n        },\n        data: item.photosArray,\n        renderItem: this.renderImage,\n        sliderWidth: viewportWidth,\n        itemWidth: viewportWidth,\n        inactiveSlideScale: 1,\n        inactiveSlideOpacity: 1,\n        firstItem: 0,\n        loop: false,\n        autoplay: false,\n        autoplayDelay: 500,\n        autoplayInterval: 3000,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this3.setState({\n            activeSlide: index\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }), React.createElement(Pagination, {\n        dotsLength: item.photosArray.length,\n        activeDotIndex: activeSlide,\n        containerStyle: styles.paginationContainer,\n        dotColor: \"rgba(255, 255, 255, 0.92)\",\n        dotStyle: styles.paginationDot,\n        inactiveDotColor: \"white\",\n        inactiveDotOpacity: 0.4,\n        inactiveDotScale: 0.6,\n        carouselRef: this.slider1Ref,\n        tappableDots: !!this.slider1Ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }))), React.createElement(CardItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, \"Rp250.000\"), React.createElement(Right, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 19\n        }\n      }, React.createElement(AntDesign, {\n        name: \"hearto\",\n        size: 24,\n        color: \"red\",\n        onPress: function onPress() {\n          return console.log('test');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      })))), React.createElement(CardItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, item.title))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, React.createElement(CardItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, React.createElement(Left, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.infoPhoto,\n        source: require(\"../../../assets/icons/time.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        style: styles.infoRecipe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, item.time, \" minutes \")), React.createElement(Left, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('RecipesList', {\n            category: category,\n            title: title\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, getCategoryName(item.categoryId).toUpperCase()))), React.createElement(Right, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, React.createElement(Rating, {\n        type: \"heart\",\n        ratingCount: 5,\n        startingValue: 10,\n        imageSize: 20,\n        showRating: true,\n        readonly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }))), React.createElement(CardItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, React.createElement(Entypo, {\n        name: \"location-pin\",\n        size: 24,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }\n      }), \"Kec. Margahayu, Bekasi, 1400, Jawa Barat, Komplek A, Nomor 312\")), React.createElement(CardItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.infoDescriptionRecipe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }\n      }, item.description))))), React.createElement(View, {\n        style: styles.infoRecipeContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, latitude && coords && React.createElement(MapView, {\n        showsUserLocation: true,\n        style: {\n          flex: 1\n        },\n        initialRegion: {\n          latitude: latitude,\n          longitude: longitude,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }, React.createElement(Marker, {\n        coordinate: {\n          latitude: -6.4477257,\n          longitude: 107.0049049\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }), React.createElement(Polyline, {\n        coordinates: coords,\n        strokeColor: \"#000\",\n        strokeWidth: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }), React.createElement(Image, {\n        source: {\n          uri: 'https://media.glassdoor.com/l/de/cd/ae/b6/the-face-shop.jpg'\n        },\n        style: {\n          flex: 1,\n          width: width * 0.95,\n          alignSelf: 'center',\n          height: height * 0.15,\n          position: 'absolute',\n          bottom: height * 0.05\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      })))), React.createElement(View, {\n        style: styles.infoRecipeContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }\n      }, React.createElement(ViewIngredientsButton, {\n        onPress: function onPress() {\n          var ingredients = item.ingredients;\n          var title = 'Ingredients for ' + item.title;\n          navigation.navigate('IngredientsDetails', {\n            ingredients: ingredients,\n            title: title\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }]);\n\n  return RecipeScreen;\n}(React.Component);\n\nRecipeScreen.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  return {\n    headerTransparent: 'true',\n    headerLeft: React.createElement(BackButton, {\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    })\n  };\n};\n\nexport { RecipeScreen as default };","map":{"version":3,"sources":["E:/Public/Native/umkm-apps/src/screens/Recipe/RecipeScreen.js"],"names":["React","styles","Carousel","Pagination","getIngredientName","getCategoryName","getCategoryById","BackButton","ViewIngredientsButton","Container","Header","Content","Card","CardItem","Right","Left","Footer","FooterTab","Button","Icon","Body","Rating","AirbnbRating","MapView","Marker","Polyline","MapViewDirections","Dimensions","get","viewportWidth","width","AntDesign","Entypo","Permissions","polyline","Location","locations","require","height","RecipeScreen","props","mergeCoords","state","latitude","longitude","desLatitude","desLongitude","hasStartAndEnd","concatStart","concatEnd","getDirections","onMarkerPress","location","coords","setState","destination","renderImage","item","imageContainer","image","uri","onPressIngredient","name","ingredient","navigation","navigate","activeSlide","active","getAsync","LOCATION","status","askAsync","response","getCurrentPositionAsync","then","sampleLocation","startLoc","test","lt","long","desLoc","GAPIS","fetch","resp","console","log","respJson","routes","json","distanceTime","legs","distance","text","time","duration","points","decode","overview_polyline","map","point","getParam","category","categoryId","title","id","ASPECT_RATIO","LATITUDE","LONGITUDE","LATITUDE_DELTA","LONGITUDE_DELTA","GOOGLE_MAPS_APIKEY","container","carousel","c","slider1Ref","photosArray","index","length","paginationContainer","paginationDot","textPrice","textTitle","infoPhoto","infoRecipe","toUpperCase","infoDescriptionRecipe","description","infoRecipeContainer","infoContainer","flex","latitudeDelta","longitudeDelta","alignSelf","position","bottom","ingredients","Component","navigationOptions","headerTransparent","headerLeft","goBack"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  TouchableHighlight\n} from 'react-native';\nimport styles from './styles';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport { getIngredientName, getCategoryName, getCategoryById } from '../../data/MockDataAPI';\nimport BackButton from '../../components/BackButton/BackButton';\nimport ViewIngredientsButton from '../../components/ViewIngredientsButton/ViewIngredientsButton';\nimport { Container, Header, Content, Card, CardItem, Right, Left, Footer, FooterTab, Button, Icon, Body} from 'native-base';\nimport { Rating, AirbnbRating } from 'react-native-ratings';\nimport MapView, { Marker, Polyline } from 'react-native-maps';\nimport MapViewDirections from 'react-native-maps-directions';\nconst { width: viewportWidth } = Dimensions.get('window');\nimport { AntDesign, Entypo } from '@expo/vector-icons';\nimport * as Permissions from 'expo-permissions'\nimport polyline from '@mapbox/polyline'\nimport * as Location from 'expo-location';\nconst locations = require('./location.json')\nconst { width, height } = Dimensions.get('screen')\n\nexport default class RecipeScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => {\n    return {\n      headerTransparent: 'true',\n      headerLeft: (\n        <BackButton\n          onPress={() => {\n            navigation.goBack();\n          }}\n        />\n      )\n    };\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSlide: 0,\n      active: true,\n      latitude: null,\n      longitude: null,\n      locations: locations\n    };\n  }\n\n  async componentDidMount() {\n    const { status } = await Permissions.getAsync(Permissions.LOCATION)\n    if (status !== 'granted') {\n      const response = await Permissions.askAsync(Permissions.LOCATION)\n    }\n    await Location.getCurrentPositionAsync({}).then(({ coords: { latitude, longitude } }) => this.setState({ latitude, longitude }, this.mergeCoords))\n    const { locations: [ sampleLocation ] } = this.state\n    this.setState({\n      desLatitude: sampleLocation.coords.latitude,\n      desLongitude: sampleLocation.coords.longitude\n    }, this.mergeCoords)\n  }\n\n  mergeCoords = () => {\n    const {\n      latitude,\n      longitude,\n      desLatitude,\n      desLongitude\n    } = this.state\n\n    const hasStartAndEnd = latitude !== null && desLatitude !== null\n\n    if (hasStartAndEnd) {\n      const concatStart = `${latitude},${longitude}`\n      const concatEnd = `${desLatitude},${desLongitude}`\n      this.getDirections(concatStart, concatEnd)\n    }\n  }\n\n  async getDirections(startLoc, test) {\n    try {\n      const lt = -6.4477257;\n      const long = 107.0049049;\n      const desLoc = `${lt},${long}`\n      const GAPIS = 'AIzaSyDslRfa7R_OkMMM8tpCjxAPHM4P5mmBlqA'\n      // const GAPIS = 'AIzaSyDslRfa7Rasda_OkMMM8tpCjasdasdsadadxAPHM4P5mmBlqA'\n      const resp = await fetch(`https://maps.googleapis.com/maps/api/directions/json?origin=${startLoc}&destination=${desLoc}&key=${GAPIS}`)\n      console.log(respJson.routes[0])\n      const respJson = await resp.json();\n      const response = respJson.routes[0]\n      const distanceTime = response.legs[0]\n      const distance = distanceTime.distance.text\n      const time = distanceTime.duration.text\n      const points = polyline.decode(respJson.routes[0].overview_polyline.points);\n      const coords = points.map(point => {\n        return {\n          latitude: point[0],\n          longitude: point[1]\n        }\n      })\n      this.setState({ coords, distance, time })\n    } catch(error) {\n      console.log('Error: ', error)\n    }\n  }\n\n  onMarkerPress = location => () => {\n    const { coords: { latitude, longitude } } = location\n    this.setState({\n      destination: location,\n      desLatitude: latitude,\n      desLongitude: longitude\n    }, this.mergeCoords)\n  }\n\n  renderImage = ({ item }) => (\n    <TouchableHighlight>\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  onPressIngredient = item => {\n    var name = getIngredientName(item);\n    let ingredient = item;\n    this.props.navigation.navigate('Ingredient', { ingredient, name });\n  };\n\n  render() {\n    const { \n      activeSlide, \n      time,\n      coords,\n      distance,\n      latitude,\n      longitude,\n      destination } = this.state;\n    const { navigation } = this.props;\n    const item = navigation.getParam('item');\n    const category = getCategoryById(item.categoryId);\n    const title = getCategoryName(category.id);\n\n    const { width, height } = Dimensions.get('window');\n    const ASPECT_RATIO = width / height;\n    const LATITUDE = -6.2477257;\n    const LONGITUDE = 107.0049049;\n    const LATITUDE_DELTA = 0.0922;\n    const LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n    const GOOGLE_MAPS_APIKEY = 'AIzaSyDslRfa7R_OkMMM8tpCjxAPHM4P5mmBlqA'\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.container}>\n        <Container>\n          <Content>\n            <Card>\n              <CardItem cardBody>\n                <View style={styles.carousel}>\n                  <Carousel\n                    ref={c => {\n                      this.slider1Ref = c;\n                    }}\n                    data={item.photosArray}\n                    renderItem={this.renderImage}\n                    sliderWidth={viewportWidth}\n                    itemWidth={viewportWidth}\n                    inactiveSlideScale={1}\n                    inactiveSlideOpacity={1}\n                    firstItem={0}\n                    loop={false}\n                    autoplay={false}\n                    autoplayDelay={500}\n                    autoplayInterval={3000}\n                    onSnapToItem={index => this.setState({ activeSlide: index })}\n                  />\n                  \n                  <Pagination\n                    dotsLength={item.photosArray.length}\n                    activeDotIndex={activeSlide}\n                    containerStyle={styles.paginationContainer}\n                    dotColor=\"rgba(255, 255, 255, 0.92)\"\n                    dotStyle={styles.paginationDot}\n                    inactiveDotColor=\"white\"\n                    inactiveDotOpacity={0.4}\n                    inactiveDotScale={0.6}\n                    carouselRef={this.slider1Ref}\n                    tappableDots={!!this.slider1Ref}\n                  />\n              </View>\n              </CardItem>\n              <CardItem>\n                <Text style={styles.textPrice}>Rp250.000</Text>\n                <Right>\n                  <Text><AntDesign name=\"hearto\" size={24} color=\"red\" onPress={ ()=> console.log('test') } /></Text>\n                </Right>\n              </CardItem>\n              <CardItem>\n                <Text style={styles.textTitle}>{item.title}</Text>\n              </CardItem>\n            </Card>\n            <Card>\n              <CardItem>\n                <Left>\n                  <Image style={styles.infoPhoto} source={require('../../../assets/icons/time.png')} />\n                  <Text style={styles.infoRecipe}>{item.time} minutes </Text>\n                </Left>\n                <Left>\n                  <TouchableHighlight onPress={() => navigation.navigate('RecipesList', { category, title })}>\n                    <Text style={styles.category}>{getCategoryName(item.categoryId).toUpperCase()}</Text>\n                  </TouchableHighlight>\n                </Left>\n                <Right>\n                  <Rating\n                    type='heart'\n                    ratingCount={5}\n                    startingValue={10}\n                    imageSize={20}\n                    showRating\n                    readonly={true}\n                  />    \n                </Right>\n                </CardItem>\n                <CardItem>\n                  <Text><Entypo name=\"location-pin\" size={24} color=\"black\" />Kec. Margahayu, Bekasi, 1400, Jawa Barat, Komplek A, Nomor 312</Text>\n                </CardItem>\n                <CardItem>\n                  <Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n                </CardItem>\n            </Card>\n          </Content>\n        </Container>\n        \n        <View style={styles.infoRecipeContainer}>  \n          <View style={styles.infoContainer}>\n           {(latitude && coords) && (\n            <MapView\n            showsUserLocation\n            style={{\n              flex: 1\n            }}\n            initialRegion={{\n              latitude,\n              longitude,\n              latitudeDelta: 0.0922,\n              longitudeDelta: 0.0421\n            }}>\n              <Marker\n                coordinate={{ latitude: -6.4477257, longitude: 107.0049049 }}\n                // onPress={this.onMarkerPress(location)}\n              />\n              <Polyline\n                coordinates={coords}\n                strokeColor=\"#000\" // fallback for when `strokeColors` is not supported by the map-provider\n                strokeWidth={6}\n              />\n              <Image\n                source={{ uri: 'https://media.glassdoor.com/l/de/cd/ae/b6/the-face-shop.jpg' }}\n                style={{\n                  flex: 1,\n                  width: width * 0.95,\n                  alignSelf: 'center',\n                  height: height * 0.15,\n                  position: 'absolute',\n                  bottom: height * 0.05\n                }}\n              /> \n          </MapView>)}\n             {/* <MapView style={styles.map} /> */}\n             {/* <MapView style={styles.map} initialRegion={{\n                latitude: LATITUDE,\n                longitude: LONGITUDE,\n                latitudeDelta: LATITUDE_DELTA,\n                longitudeDelta: LONGITUDE_DELTA,\n              }}>\n                <Marker \n                title=\"Your Locations\"\n                coordinate={{\n                   latitude: LATITUDE,\n                   longitude: LONGITUDE,\n                }}/>\n                <Marker \n                  title=\"Merchant Locations\"\n                  coordinate={{\n                    latitude: -6.2567257,\n                    longitude: LONGITUDE,\n                  }}/>\n            </MapView> */}\n\n            {/* <MapView style={styles.map} \n                showsUserLocation //to show user current location when given access\n                loadingEnabled //to show loading while map loading\n                initialRegion={{\n                  latitude: LATITUDE,\n                  longitude: LONGITUDE,\n                  latitudeDelta: LATITUDE_DELTA,\n                  longitudeDelta: LONGITUDE_DELTA,\n                }}>\n                      <Polyline\n                      coordinates={[{ latitude: -6.4477257, longitude: 107.0049049}, { latitude: -2.4477257, longitude: 107.4049049 },]}\n                    strokeColor=\"#000\" // fallback for when `strokeColors` is not supported by the map-provider\n                  \n                    strokeWidth={6}\n      />\n                </MapView> */}\n              {/* <MapViewDirections\n                origin={{\n                   latitude: LATITUDE,\n                   longitude: LONGITUDE,\n                }}\n                destination={{\n                  latitude: -6.2567257,\n                  longitude: LONGITUDE,\n                  }}\n                apikey={GOOGLE_MAPS_APIKEY}\n              /> */}\n{/*               \n            </MapView> */}\n          </View>\n        </View>\n        <View style={styles.infoRecipeContainer}>  \n          <View style={styles.infoContainer}>\n            <ViewIngredientsButton\n              onPress={() => {\n                let ingredients = item.ingredients;\n                let title = 'Ingredients for ' + item.title;\n                navigation.navigate('IngredientsDetails', { ingredients, title });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n     </ScrollView>\n    );\n  }\n}\n\n/*cooking steps\n<View style={styles.infoContainer}>\n  <Image style={styles.infoPhoto} source={require('../../../assets/icons/info.png')} />\n  <Text style={styles.infoRecipe}>Cooking Steps</Text>\n</View>\n<Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n*/\n"]},"metadata":{},"sourceType":"module"}