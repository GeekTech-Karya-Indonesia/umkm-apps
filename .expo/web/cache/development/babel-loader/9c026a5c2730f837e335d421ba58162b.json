{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Public\\\\Native\\\\umkm-apps\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppContainer from \"./src/navigations/AppNavigation\";\nimport * as Font from 'expo-font';\nimport { Ionicons, AntDesign, Entypo } from '@expo/vector-icons';\nimport { AppLoading } from 'expo';\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoadingComplete = _useState2[0],\n      setIsLoadingComplete = _useState2[1];\n\n  useEffect(function () {\n    native_base();\n  });\n\n  function native_base() {\n    return _regeneratorRuntime.async(function native_base$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread(_objectSpread(_objectSpread({\n              Roboto: require('native-base/Fonts/Roboto.ttf'),\n              Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf')\n            }, Ionicons.font), AntDesign.font), Entypo.font)));\n\n          case 2:\n            setIsLoadingComplete(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (!isLoadingComplete) {\n    return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  });\n}","map":{"version":3,"sources":["E:/Public/Native/umkm-apps/App.js"],"names":["React","useState","useEffect","AppContainer","Font","Ionicons","AntDesign","Entypo","AppLoading","App","isLoadingComplete","setIsLoadingComplete","native_base","loadAsync","Roboto","require","Roboto_medium","font"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,OAAOC,YAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,oBAA5C;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACuBR,QAAQ,CAAC,KAAD,CAD/B;AAAA;AAAA,MACrBS,iBADqB;AAAA,MACFC,oBADE;;AAE5BT,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,CAAT;;AAIA,WAAeA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQR,IAAI,CAACS,SAAL;AACJC,cAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CADX;AAEJC,cAAAA,aAAa,EAAED,OAAO,CAAC,qCAAD;AAFlB,eAGDV,QAAQ,CAACY,IAHR,GAIDX,SAAS,CAACW,IAJT,GAKDV,MAAM,CAACU,IALN,EADR;;AAAA;AAQEN,YAAAA,oBAAoB,CAAC,IAAD,CAApB;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,MAAI,CAACD,iBAAL,EAAwB;AACtB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAID","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport AppContainer from './src/navigations/AppNavigation';\nimport * as Font from 'expo-font';\nimport { Ionicons, AntDesign, Entypo } from '@expo/vector-icons';\nimport { AppLoading } from 'expo';\nexport default function App() {\n  const [isLoadingComplete, setIsLoadingComplete ] = useState(false)\n  useEffect(() => {\n    native_base();\n  })\n\n  async function native_base() {\n    await Font.loadAsync({\n      Roboto: require('native-base/Fonts/Roboto.ttf'),\n      Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\n      ...Ionicons.font,\n      ...AntDesign.font,\n      ...Entypo.font\n    })\n    setIsLoadingComplete(true)\n  }\n\n  if (!isLoadingComplete) {\n    return <AppLoading />;\n  }\n\n  return (\n     <AppContainer />\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}